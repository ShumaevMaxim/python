"""
Необходимо распределить 450 мест между партиями, участвующими в выборах. Распределение происходит следующим образом:
1. Подсчитывается сумма голосов, которые были отданы за каждую партию, а также общая сумма голосов за все партии.

2. Общая сумма голосов делится на 450, чтобы получить значение, называемое "первое избирательное частное" - это количество
 голосов, необходимых для получения одного места в парламенте.

3. Каждая партия получает столько мест в парламенте, сколько раз число голосов за неё делится на первое избирательное
частное (целая часть от деления).

4. Если после первого раунда распределения мест сумма количества мест, отданных партиям, меньше 450,
 то оставшиеся места передаются партиям, у которых дробная часть от деления числа голосов на первое избирательное частное наибольшая.
  При равенстве дробных частей, преимущество отдается партии с большим числом голосов.

5. Необходимо вывести названия всех партий и количество голосов, которые эти партии получили в парламенте.
Названия должны быть выведены в том же порядке, в каком они были заданы во входных данных.

Входные данные (файл):
- Список партий, участвующих в выборах. Затем строки, каждая из которых содержит название партии (строку, которая может включать пробелы)
 и количество голосов, полученных этой партией.

Выходные данные (файл):
- Названия всех партий и количество голосов, которые они получили в парламенте. Названия должны быть выведены в том же порядке,
 в котором они были заданы во входных данных.
"""


with open("input.txt", 'r') as f:
    lines = f.readlines()
parties = []
votes = []
total_votes = 0

for line in lines:
    party, vote = line.strip().split(',')
    parties.append(party)
    votes.append(int(vote))
    total_votes += int(vote)

# Первое избирательное
first_izb = total_votes / 450

# Количество мест для каждой партии
seats = []
for vote in votes:
    seats.append(vote // first_izb)

remaining_seats = int(450 - sum(seats))
print(seats)
print(remaining_seats)

if(remaining_seats > 0):
    droby = []
    for i in range(len(votes)):
        drob = votes[i] / first_izb - seats[i]
        droby.append((i, drob))
    droby.sort(key=lambda x: -x[1])
    print(droby)
    for i in range(remaining_seats):
        index = droby[i][0]
        seats[index] += 1

with open("output.txt", 'w') as f:
    for i in range(len(parties)):
        f.write(f"{parties[i]}: {seats[i]}\n")

